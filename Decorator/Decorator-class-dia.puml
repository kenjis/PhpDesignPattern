@startuml

package "Decorator Pattern" #DDDDDD {
  class Component {
    operation()
  }

  class ConcreteComponent {
    operation()
  }

  class Decorator {
    operation()
  }

  Component <|-- ConcreteComponent
  Component <|-- Decorator

  Decorator o-- Component

  class ConcreteDecoratorA {
    addedState
    operation()
  }

  class ConcreteDecoratorB {
    operation()
    addedBehavier()
  }

  Decorator <|-- ConcreteDecoratorA
  Decorator <|-- ConcreteDecoratorB
}

package "Sample" {
  interface Text {
    +getText()
    +setText()
  }

  class PlainText {
    +getText()
    +setText()
  }

  class TextDecorator {
    +getText()
    +setText()
  }

  Text <|-- PlainText
  Text <|-- TextDecorator

  TextDecorator o-- Text

  class DoubleByteText {
    +getText()
  }

  class UpperCaseText {
    +getText()
  }

  TextDecorator <|-- DoubleByteText
  TextDecorator <|-- UpperCaseText
}

@enduml
